<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>AWS on 지식 공유, 협업 ✈️ 성장</title>
        <link>https://Haebuk.github.io/categories/aws/</link>
        <description>Recent content in AWS on 지식 공유, 협업 ✈️ 성장</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko-kr</language>
        <lastBuildDate>Fri, 09 Sep 2022 23:13:41 +0900</lastBuildDate><atom:link href="https://Haebuk.github.io/categories/aws/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Cloudfront - OAI를 통한 S3 URL 공개</title>
        <link>https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/</link>
        <pubDate>Fri, 09 Sep 2022 23:13:41 +0900</pubDate>
        
        <guid>https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/</guid>
        <description>&lt;h1 id=&#34;들어가며&#34;&gt;들어가며&lt;/h1&gt;
&lt;p&gt;S3에 저장된 객체를 퍼블릭으로 공개를 할 경우, 자신의 S3 버킷 구조가 그대로 노출되는 문제와 함께, 보안이 우려되는 경우가 있다.&lt;/p&gt;
&lt;p&gt;이 경우 Cloudfront와 원본 액세스 ID, 즉 OAI를 사용해 S3 버킷 구조를 숨기고, 객체를 외부에 공개할 수 있다.&lt;/p&gt;
&lt;h1 id=&#34;1-객체를-공개할-s3-버킷-생성&#34;&gt;1. 객체를 공개할 S3 버킷 생성&lt;/h1&gt;
&lt;p&gt;외부 사용자들에게 공개할 객체를 담는 버킷을 생성한다. 나같은 경우에는 링크드인에 수료증 링크를 걸기 위해 &lt;code&gt;kade-certificate&lt;/code&gt;라는 버킷을 생성하고 그 안에 수료증 파일들을 저장했다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/bucket.png&#34;
	width=&#34;2160&#34;
	height=&#34;1048&#34;
	srcset=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/bucket_hud8a9dc34686e478e4610d4d84f6bd6ae_210690_480x0_resize_box_3.png 480w, https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/bucket_hud8a9dc34686e478e4610d4d84f6bd6ae_210690_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;버킷 내부 구조&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;494px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-콘솔을-사용하여-oai-생성-및-cloudfront-배포에-추가&#34;&gt;2. 콘솔을 사용하여 OAI 생성 및 Cloudfront 배포에 추가&lt;/h1&gt;
&lt;p&gt;Cloudfront 페이지에서 배포 생성을 클릭하고, 생성한 S3 버킷을 원본 도메인으로 선택한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/2.png&#34;
	width=&#34;1650&#34;
	height=&#34;842&#34;
	srcset=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/2_hu64f06fcdab63cbbf870274c729bdbdd5_111135_480x0_resize_box_3.png 480w, https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/2_hu64f06fcdab63cbbf870274c729bdbdd5_111135_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;원본 도메인 선택&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;470px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;이후 하단의 S3 버킷 액세스에서 Legacy access identities 항목을 선택하고, 새 OAI를 생성한다.&lt;/p&gt;
&lt;p&gt;생성한 OAI를 선택한다.&lt;/p&gt;
&lt;p&gt;그리고 버킷 정책 항목에서 예, 버킷 정책 업데이트를 선택하면 자동으로 S3 정책을 수정해준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/3.png&#34;
	width=&#34;1646&#34;
	height=&#34;790&#34;
	srcset=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/3_hu7715cdf6496eac4e552801401ceaaaf4_154848_480x0_resize_box_3.png 480w, https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/3_hu7715cdf6496eac4e552801401ceaaaf4_154848_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;OAI 생성 후 선택 화면&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;208&#34;
		data-flex-basis=&#34;500px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;GET 요청만 수락하므로 하단의 모든 항목들의 수정 없이 배포 생성 버튼을 클릭한다.&lt;/p&gt;
&lt;h1 id=&#34;3-생성된-cloudfront-url로-접근&#34;&gt;3. 생성된 Cloudfront url로 접근&lt;/h1&gt;
&lt;p&gt;배포가 생성되고 나면 다음 화면과 같다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/4.png&#34;
	width=&#34;2690&#34;
	height=&#34;498&#34;
	srcset=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/4_hu37aa91a9049c7ef8250039faf64da06b_103025_480x0_resize_box_3.png 480w, https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/4_hu37aa91a9049c7ef8250039faf64da06b_103025_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Cloudfront 배포 생성 후 화면&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;540&#34;
		data-flex-basis=&#34;1296px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;도메인 이름에 접근 가능한 URL이 생성된다. (d3sdxwnh25t6pc.cloudfront.net 처럼)&lt;/p&gt;
&lt;p&gt;이 URL 뒤에 버킷내에 저장된 객체명을 붙여 접근하면 다음과 같이 외부에서 접근이 가능함을 알 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/5.png&#34;
	width=&#34;2880&#34;
	height=&#34;1790&#34;
	srcset=&#34;https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/5_hu30ee37daabfeec947a4d20a951b04d08_586527_480x0_resize_box_3.png 480w, https://Haebuk.github.io/p/cloudfront-oai%EB%A5%BC-%ED%86%B5%ED%95%9C-s3-url-%EA%B3%B5%EA%B0%9C/5_hu30ee37daabfeec947a4d20a951b04d08_586527_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;https://d3sdxwnh25t6pc.cloudfront.net/2022_udacity_aws_ml.pdf 로 접근했을 때 정상적으로 수료증이 출력된다.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;386px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;이처럼 Cloudfront와 OAI를 사용하여 사용자의 버킷 URL은 숨긴채, 외부에서 접근을 허용할 수 있다.&lt;/p&gt;
&lt;h1 id=&#34;reference&#34;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;원본 액세스 ID(OAI)를 사용하여 Amazon S3 콘텐츠에 대한 액세스 제한: &lt;a class=&#34;link&#34; href=&#34;https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>[Udacity] AWS Machine Learning Engineer Foundations 2022 후기</title>
        <link>https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/</link>
        <pubDate>Tue, 06 Sep 2022 13:47:25 +0900</pubDate>
        
        <guid>https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/</guid>
        <description>&lt;img src="https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/udacity-logo-vector.png" alt="Featured image of post [Udacity] AWS Machine Learning Engineer Foundations 2022 후기" /&gt;&lt;h1 id=&#34;들어가며&#34;&gt;들어가며&lt;/h1&gt;
&lt;p&gt;최근 흥미로운 프로그램을 발견했다. Udacity에서 제공하는 &lt;a class=&#34;link&#34; href=&#34;https://www.udacity.com/scholarships/aws-machine-learning-scholarship-program&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AWS Machine Learning Engineer Scholarship Program&lt;/a&gt;이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/main.png&#34;
	width=&#34;2402&#34;
	height=&#34;1508&#34;
	srcset=&#34;https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/main_hu6cbafecd091f171ac266320bff05857b_2645176_480x0_resize_box_3.png 480w, https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/main_hu6cbafecd091f171ac266320bff05857b_2645176_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;메인 화면&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;159&#34;
		data-flex-basis=&#34;382px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;AWS 이름을 달고 있는 이유는 이 과정 내에서 AWS 제품인 DeepRacer와 DeepComposer를 실습해 볼 수 있기 때문이다.&lt;/p&gt;
&lt;p&gt;끝까지 수료하면 평가를 치르게 되는데, 기준 점수 이상이 나오면 수료증을 발급해주고, 상위 325등 이내의 성적으로 수료시 후속 프로그램인 &lt;a class=&#34;link&#34; href=&#34;https://www.udacity.com/course/aws-machine-learning-engineer-nanodegree--nd189&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AWS Machine Learning Engineer Nanodegree&lt;/a&gt; 도 무료로 수강할 수 있는 기회를 제공한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;At the end of the AWS Machine Learning Foundations Course, learners will take an assessment from which top performers will be selected for one of 325 follow-up scholarships to one of Udacity’s most popular and recently refreshed Nanodegree programs: The AWS Machine Learning Engineer Nanodegree program.&lt;/p&gt;
&lt;p&gt;AWS 기계 학습 기초 과정을 마친 325명의 학습자는 Udacity의 가장 인기 있고 최근에 새로워진 Nanodegree 프로그램 중 하나인 AWS 기계 학습 엔지니어 Nanodegree 프로그램을 수강할 수 있게 됩니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Udemy의 nano degree는 평은 좋지만 악랄한 가격으로 유명한데, 무료로 제공한다는 이 기회를 놓칠 수 없어서 냉큼 신청했다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/nanodegree-price.png&#34;
	width=&#34;400&#34;
	height=&#34;363&#34;
	srcset=&#34;https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/nanodegree-price_hu2d96f059bb465937a3859b9ea85bb35d_33363_480x0_resize_box_3.png 480w, https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/nanodegree-price_hu2d96f059bb465937a3859b9ea85bb35d_33363_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;악랄한 가격.. 환율 1370원 기준 약 232만원. 지금은 할인중이다.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;110&#34;
		data-flex-basis=&#34;264px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;강의-구성&#34;&gt;강의 구성&lt;/h1&gt;
&lt;p&gt;강의는 크게 4가지 구성으로 이루어져 있다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Introduction to the Program&lt;/li&gt;
&lt;li&gt;AWS Machine Learning Foundations&lt;/li&gt;
&lt;li&gt;Certification Assessment&lt;/li&gt;
&lt;li&gt;Certificate of Completion Assessment&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;1-introduction-to-the-program&#34;&gt;1. Introduction to the Program&lt;/h2&gt;
&lt;p&gt;첫번째 챕터는 오리엔테이션으로 이루어져 있다.&lt;/p&gt;
&lt;p&gt;Udacity에 대해 소개하고, 강사진은 누구이며, 선수지식은 무엇이 필요한지, 이 코스에서 무엇을 배울지에 대해 소개한다.&lt;/p&gt;
&lt;p&gt;선수지식은 통계와 파이썬 프로그래밍에 대해 기초수준만 필요하다고 나와있다.&lt;/p&gt;
&lt;p&gt;가볍게 넘어갔다.&lt;/p&gt;
&lt;h2 id=&#34;2-aws-machine-learning-foundations&#34;&gt;2. AWS Machine Learning Foundations&lt;/h2&gt;
&lt;p&gt;본격적인 강의 챕터로, 크게 네 가지 구성으로 이루어져 있다.&lt;/p&gt;
&lt;p&gt;첫 번째는 아주 간단한 머신러닝 태스크들의 정의와 문제들을 해결하기 위해 머신러닝을 어떻게 적용하는지 학습한다. 지도, 비지도 및 강화학습에 대한 소개로 봐도 무방한다.&lt;/p&gt;
&lt;p&gt;두 번째는 AWS를 활용한 머신러닝인데, DeepRacer와 DeepComposer 서비스를 이용한다.&lt;/p&gt;
&lt;p&gt;DeepRacer는 강화 학습을 통한 자율 주행 자동차를 훈련시킬 수 있는 서비스, DeepComposer는 작곡 서비스이다. 솔직히 말하면 장난감에 가깝다. 차라리 SageMaker와 같은 서비스를 소개했으면 어땠을까 싶었는데, 워낙 기초 수준의 강의이다 보니 수강생의 흥미를 돋구기 위해 선택한건지, 잘 사용되지 않는 AWS의 서비스를 살리고자(&amp;hellip;)하는 건지는 잘 모르겠다. 여기서 이 강의에 대해 크게 실망을 했다.&lt;/p&gt;
&lt;p&gt;뒤에 두 파트는 소프트웨어 엔지니어링 파트로, 리팩토링, 테스팅, 깃을 통한 버전관리에 대해 소개한다. 모두 기초적인 수준이기 때문에 가볍게 듣고 넘어갔다.&lt;/p&gt;
&lt;p&gt;세 번째 챕터는 평가(시험)을 치루게 된다.&lt;/p&gt;
&lt;h1 id=&#34;평가&#34;&gt;평가&lt;/h1&gt;
&lt;p&gt;세 번째 챕터는 두 번째 챕터(AWS Machine Learning Foundations)에서 학습한 내용을 바탕으로 온라인 시험을 치룬다.&lt;/p&gt;
&lt;p&gt;감독은 따로 없고 온라인상으로 60분동안 시험을 치르게 된다.&lt;/p&gt;
&lt;p&gt;60%이상은 수료, 90%이상 부터는 나노 디그리 프로그램에 대한 자격을 얻는다고 한다. 위에 325등과 상이한 내용이라 혼란스러웠다.&lt;/p&gt;
&lt;p&gt;시험 난이도는 생각보다 까다로워서 당황했다. 굉장히 만만히 봤었는데, 당황스러움을 안겨주는 문제들이 많았다. 높은 성적을 받고 싶다면 꼼꼼하게 보는 것을 추천한다. 챕터 2에서 세부 파트가 끝날 때 마다 퀴즈가 나오는데, 틀린 문제들의 오답 노트를 미리 작성했음에도 불구하고 꽤 난항을 겪었다.&lt;/p&gt;
&lt;p&gt;그래도 다행히 한 번에 수료를 하였고, 점수는 따로 공개되지 않았다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/cert.png&#34;
	width=&#34;869&#34;
	height=&#34;658&#34;
	srcset=&#34;https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/cert_hu032a3d659755e4e5cfea1986e8d63cf5_107265_480x0_resize_box_3.png 480w, https://Haebuk.github.io/p/udacity-aws-machine-learning-engineer-foundations-2022-%ED%9B%84%EA%B8%B0/cert_hu032a3d659755e4e5cfea1986e8d63cf5_107265_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;수료증&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;316px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;후기&#34;&gt;후기&lt;/h1&gt;
&lt;p&gt;솔직히 이 강의는 굉장히 별로였고.. 초심자에게도 딱히 추천하지 않는다.&lt;/p&gt;
&lt;p&gt;얻을 게 없다. 머신러닝 기초에 대해 배우고 싶으면 양질의 강의나 책이 매우 많기 때문에 이를 사용하는 것을 추천하며, AWS의 머신러닝 서비스를 사용해보고자 하는 목적으로도 비추천한다.&lt;/p&gt;
&lt;p&gt;오로지 나노디그리를 공짜로 얻기 위한 목적으로 듣는 것이 좋은 것 같다. 11월 6일 나노디그리 대상자를 발표한다고 하니, 그때까지  기다려야 겠다.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>AWS Data Analysis Fundamentals 후기</title>
        <link>https://Haebuk.github.io/p/aws-data-analysis-fundamentals-%ED%9B%84%EA%B8%B0/</link>
        <pubDate>Sat, 09 Jan 2021 17:12:39 +0900</pubDate>
        
        <guid>https://Haebuk.github.io/p/aws-data-analysis-fundamentals-%ED%9B%84%EA%B8%B0/</guid>
        <description>&lt;p&gt;지난번 포스팅에서 data analytics learning plan을 수강한다고 언급했었는데요,(참조: &lt;a class=&#34;link&#34; href=&#34;https://haebuk.github.io/aws/AWS-Data-Analytics-Learning-Plan2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[AWS] Data Analytics Learning Plan을 시작하며&lt;/a&gt;) 아무래도 영어로 된 강의다보니 첫 수강에 부담이 있었습니다.&lt;/p&gt;
&lt;p&gt;한국어로 된 유사한 강의가 있나 찾아보던 중 발견하게 되어 먼저 수강하기로 결정했습니다. (링크: &lt;a class=&#34;link&#34; href=&#34;https://explore.skillbuilder.aws/learn/course/636/data-analytics-fundamentals-korean&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Data Analytics Fundamentals (Korean)&lt;/a&gt;, 수강신청을 하지 않았을 경우 접속이 되지 않을 수 있습니다. 먼저 aws skill builder에서 등록을 진행해주세요.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68543150/148673775-845754fe-34d2-4120-a41a-f2f7f237d14b.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;강의-구성&#34;&gt;강의 구성&lt;/h2&gt;
&lt;p&gt;강의는 약 3시간 30분으로 이루어져 있습니다. 강의 구성은 5V에 대해 소개하는데요, 볼륨(Volume), 속도(Velocity), 다양성(Variety), 정확성(Veracity),  가치(Value)의 5V입니다.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;데이터 분석 과정에서 직면한 5V의 문제를 어떤식으로 접근해야하는지, AWS의 어떤 서비스를 이용하면 되는지에 대해 소개합니다.&lt;/p&gt;
&lt;h2 id=&#34;후기&#34;&gt;후기&lt;/h2&gt;
&lt;p&gt;솔직히 별로..라고 생각했습니다.&lt;/p&gt;
&lt;p&gt;기초강의다보니 실무적으로 사용하는 방법보다는, 이런 문제는 우리의 어떤 서비스를 통해 해결할 수 있어~ 에서 마치는 느낌입니다.&lt;/p&gt;
&lt;p&gt;AWS에 어느정도 관심있으신 분들은 다 아시는 내용일거라고 생각합니다.&lt;/p&gt;
&lt;h2 id=&#34;아무튼-수료&#34;&gt;아무튼 수료&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68543150/148674132-d5d7336f-457e-4ec8-8fb2-edc6614db078.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
