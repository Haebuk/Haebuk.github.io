<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on 지식 공유, 협업 ✈️ 성장</title>
    <link>https://Haebuk.github.io/categories/python/</link>
    <description>Recent content in Python on 지식 공유, 협업 ✈️ 성장</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language><atom:link href="https://Haebuk.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[AWS Athena] AWS Lambda로 Athena 자동 파티셔닝 하기</title>
      <link>https://Haebuk.github.io/post/2022-04-30.athena-lambda-partition-copy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Haebuk.github.io/post/2022-04-30.athena-lambda-partition-copy/</guid>
      <description>
        
          
          
        
      </description>
    </item>
    
    <item>
      <title>[Dask] Dask 튜토리얼</title>
      <link>https://Haebuk.github.io/post/2022-01-10-dask-tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Haebuk.github.io/post/2022-01-10-dask-tutorial/</guid>
      <description>
        
          
            들어가며 현업에서 간단하게 로컬에서 데이터를 뽑아보려해도 수 GB는 훌쩍 넘어가는 경우가 다반사기 때문에, Pandas로는 한계가 있음을 느꼈습니다.
Dask를 사용하여 기초적인 병렬 계산, 데이터프레임 다루기, 간단한 신경망을 통해 학습하는 과정을 살펴보겠습니다.
https://www.youtube.com/watch?v=Alwgx_1qsj4를 참고했습니다.
예전에 촬영되어서 그대로 코드를 작성하면 작동하지 않는 코드가 여럿 있습니다. 2022년 1월 10일 기준으로 작동하도록 수정했습니다.
Pre-required dask와 함께 진행에는 영향이 없지만 아래에서 제공하는 시각화를 위해서는 graphviz 라이브러리를 설치해야합니다.
또한 Machine Learning 파트에서 Tensorflow를 사용합니다. M1 맥북에서 실행했기 때문에 출력문에 약간의 차이가 발생할 수 있습니다.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
